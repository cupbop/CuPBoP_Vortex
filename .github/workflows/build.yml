name: build

on:
  push:
    paths-ignore:
      - '*.md'

  pull_request:
    paths-ignore:
      - '*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"

      - name: Download vortex header
        run: |
          cd ${{ github.workspace }}
          export CuPBoP_PATH=`pwd`
          wget 'https://www.dropbox.com/scl/fi/nd924ma3cq1fhauo0bs8x/vortex-header.tar.gz?rlkey=zudpp29yuxcrn42mxkiga8e06&dl=1' -O vortex-header.tar.gz
          tar -xzf vortex-header.tar.gz
          cp vortex.h $CuPBoP_PATH/runtime/include

      - name: Download CUDA header files
        run: |
          cd ${{ github.workspace }}
          wget https://www.dropbox.com/s/r18io0zu3idke5p/cuda-header.tar.gz?dl=1
          tar -xzf 'cuda-header.tar.gz?dl=1'
          cp -r include/* runtime/threadPool/include/

      - name: Download CUDA files used for compiling NVVM IR
        run: |
          cd ${{ github.workspace }}
          wget https://www.dropbox.com/s/4pckqsjnl920gpn/cuda-10.1.tar.gz?dl=1
          tar -xzf 'cuda-10.1.tar.gz?dl=1'

      - name: Build project
        run: |
          cd ${{ github.workspace }}
          export CuPBoP_PATH=`pwd`
          export LD_LIBRARY_PATH=$CuPBoP_PATH/build/runtime:$CuPBoP_PATH/build/runtime/threadPool:$LD_LIBRARY_PATH
          export VORTEX_ARCHITECTURE=64
          mkdir build
          cd build
          cmake .. -DLLVM_CONFIG_PATH=`which llvm-config` -DCUDA_PATH=${{ github.workspace }}/cuda-10.1
          make -j8

          echo "Generate bitcode files (.bc) for host/device"
          export CUDA_PATH=$CuPBoP_PATH/cuda-10.1
          export VORTEX_SCHEDULE_FLAG=0
          export KERNEL_CU=saxpy.cu
          export ARCH=64
          export KERNEL=`basename $KERNEL_CU .cu`
          cd ${CuPBoP_PATH}/examples/microbench
          clang++ -O0 -g -std=c++11  ./$KERNEL_CU -I../.. --cuda-path=$CUDA_PATH --cuda-gpu-arch=sm_50 -L$CUDA_PATH/lib64 -lcudart_static -ldl -lrt -pthread -save-temps -v  || true

          echo "Generate LLVM IR files(.ll) for host and device"
          llvm-dis $KERNEL-cuda-nvptx64-nvidia-cuda-sm_50.bc
          llvm-dis $KERNEL-host-x86_64-unknown-linux-gnu.bc
          echo "Translate the kernel bitcode by using CuPBoP's kernel translator"
          $CuPBoP_PATH/build/compilation/kernelTranslator $KERNEL-cuda-nvptx64-nvidia-cuda-sm_50.bc kernel.bc
          llvm-dis kernel.bc

 
